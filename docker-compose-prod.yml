version: '3'
services:

  gateway:
    image: gateway
    build: 
      context: ./gateway
      dockerfile: Dockerfile-prod
    container_name: gateway
    ports:
      - "4000:80"
    environment:
      - PORT=80
      - NODE_ENV=production
    restart: "on-failure"
    depends_on:
      - video-streaming
      - video-storage
      - history
      - recommendations
      - metadata
      - video-upload
  
  video-streaming:
    image: video-streaming
    build: 
      context: ./video-streaming
      dockerfile: Dockerfile-prod
    container_name: video-streaming
    ports:
      - "4001:80"
    environment:
      - PORT=80
      - DBHOST=mongodb://db:27017
      - DBNAME=video-streaming
      - VIDEO_STORAGE_HOST=video-storage
      - VIDEO_STORAGE_PORT=80
      - RABBIT=amqp://guest:guest@rabbit:5672
    depends_on:
      - db
      - rabbit
    restart: "on-failure"

  video-storage:
    image: azure-storage
    build: 
      context: ./azure-storage
      dockerfile: Dockerfile-prod
    container_name: video-storage
    ports:
     - "4002:80"
    environment:
      - PORT=80
      - STORAGE_ACCOUNT_NAME=vsa1storage
      - STORAGE_ACCESS_KEY=dz67nfEf6HNdltV+r7QQ+G21g6/LOnpXvga2OUAw2UrPz5A7Ww381zxqiABUR/sjuffdSSS5gJ1DbLxeyqImwg==
    restart: "on-failure"
 
  history:
    image: history
    build: 
      context: ./history
      dockerfile: Dockerfile-prod
    container_name: history
    ports:
      - "4003:80"
    environment:
      - PORT=80
      - RABBIT=amqp://guest:guest@rabbit:5672
      - NODE_ENV=production
      - DBHOST=mongodb://db:27017
      - DBNAME=history
    restart: "on-failure"
    depends_on:
      - db
      - rabbit

  recommendations:
    image: recommendations
    build: 
      context: ./recommendations
      dockerfile: Dockerfile-prod
    container_name: recommendations
    ports:
      - "4004:80"
    environment:
      - PORT=80
      - RABBIT=amqp://guest:guest@rabbit:5672
      - DBHOST=mongodb://db:27017
      - DBNAME=recommendations
      - NODE_ENV=production
    depends_on:
      - db
      - rabbit
    restart: "on-failure"

  db:
    image: mongo:4.2.8
    container_name: db
    ports:
      - "4005:27017"
    restart: always


  metadata:
    image: metadata
    build: 
      context: ./metadata
      dockerfile: Dockerfile-prod
    container_name: metadata
    ports:
      - "4006:80"
    environment:
      - PORT=80
      - DBHOST=mongodb://db:27017
      - DBNAME=metadata
      - NODE_ENV=production
      - RABBIT=amqp://guest:guest@rabbit:5672
    depends_on:
      - db
      - rabbit
    restart: "on-failure"

  video-upload:
    image: video-upload
    build: 
      context: ./video-upload
      dockerfile: Dockerfile-prod
    container_name: video-upload
    ports:
      - "4007:80"
    environment:
      - PORT=80
      - RABBIT=amqp://guest:guest@rabbit:5672
      - NODE_ENV=production
    depends_on:
      - rabbit
    restart: "on-failure"


  rabbit:
    image: rabbitmq:3.8.5-management
    container_name: rabbit
    ports:
      - "5672:5672"
      - "15672:15672"
    expose:
      - "5672"
      - "15672"
    restart: always
  

  